[{"/Users/jbirondo/Desktop/food_insecurity/src/index.js":"1","/Users/jbirondo/Desktop/food_insecurity/src/App.js":"2","/Users/jbirondo/Desktop/food_insecurity/src/reportWebVitals.js":"3","/Users/jbirondo/Desktop/food_insecurity/src/Components/SearchBar.js":"4","/Users/jbirondo/Desktop/food_insecurity/src/Components/Homepage.js":"5","/Users/jbirondo/Desktop/food_insecurity/src/Components/food_banks.js":"6","/Users/jbirondo/Desktop/food_insecurity/src/Components/shelter.js":"7"},{"size":695,"mtime":1607558244819,"results":"8","hashOfConfig":"9"},{"size":2272,"mtime":1607558244817,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1607456669997,"results":"11","hashOfConfig":"9"},{"size":2209,"mtime":1607558244818,"results":"12","hashOfConfig":"9"},{"size":7722,"mtime":1607558244817,"results":"13","hashOfConfig":"9"},{"size":1014,"mtime":1607558244818,"results":"14","hashOfConfig":"9"},{"size":950,"mtime":1607558244819,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1s0r5zj",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/Users/jbirondo/Desktop/food_insecurity/src/index.js",[],"/Users/jbirondo/Desktop/food_insecurity/src/App.js",[],["33","34"],"/Users/jbirondo/Desktop/food_insecurity/src/reportWebVitals.js",[],"/Users/jbirondo/Desktop/food_insecurity/src/Components/SearchBar.js",[],"/Users/jbirondo/Desktop/food_insecurity/src/Components/Homepage.js",["35"],"import React from 'react';\nimport Food_Banks from './food_banks';\nimport SearchBar from './SearchBar';\nimport Shelter from './shelter';\nimport $ from 'jquery';\nimport mapboxgl from \"mapbox-gl\";\n\nexport default class Homepage extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            zipcode: null,\n            show_foodbanks: true,\n            show_shelters: true,\n            foodbanks: [],\n            shelters: [],\n            isLoading: true,\n        }\n\n        this.zipcodeCallback = this.zipcodeCallback.bind(this);\n        this.displayFoodbanks = this.displayFoodbanks.bind(this);\n        this.displayShelters = this.displayShelters.bind(this);\n        this.fetchData = this.fetchData.bind(this)\n    }\n\n    componentDidMount() {\n        navigator.geolocation.getCurrentPosition((pos) => {\n            let lat = pos.coords.latitude\n            let long = pos.coords.longitude\n            \n            var settings = {\n                \"async\": true,\n                \"crossDomain\": true,\n                \"url\": \"https://us1.locationiq.com/v1/reverse.php?key=pk.d0f854ee46b2834b4db26e99827dfe8b&lat=\" + lat + \"&lon=\" + long + \"&format=json\",\n                \"method\": \"GET\"\n            }\n\n            $.ajax(settings).done(function (response) {\n                if(response){\n                    let zip = response.address.postcode\n                    localStorage.setItem(\"zip\", zip)\n                }\n            });\n        })\n        this.fetchData(localStorage.getItem(\"zip\"))\n    }\n\n    componentDidMount() {\n        this.fetchData(this.state.zipcode);\n        navigator.geolocation.getCurrentPosition((pos) => {\n            console.log(pos)\n        })\n        var settings = {\n            \"async\": true,\n            \"crossDomain\": true,\n            \"url\": \"https://us1.locationiq.com/v1/search.php?key=pk.d0f854ee46b2834b4db26e99827dfe8b&q=Empire%20State%20Building&format=json\",\n            \"method\": \"GET\"\n        }\n        $.ajax(settings).done(function (response) {\n            console.log(response);\n        });\n\n       \n\n        //map stuff beings\n        // const map = new mapboxgl.Map({\n        //   container: this.mapContainer,\n        //   style: \"mapbox://styles/mapbox/streets-v11\",\n        //   center: [this.state.lng, this.state.lat],\n        //   zoom: this.state.zoom,\n        //   interactive: false,\n        // });\n\n        // var geojson = {\n        //   type: \"FeatureCollection\",\n        //   features: [\n        //     {\n        //       type: \"Feature\",\n        //       geometry: {\n        //         type: \"Point\",\n        //         coordinates: [-77.032, 38.913],\n        //       },\n        //       properties: {\n        //         title: \"Mapbox\",\n        //         description: \"Washington, D.C.\",\n        //       },\n        //     },\n        //     {\n        //       type: \"Feature\",\n        //       geometry: {\n        //         type: \"Point\",\n        //         coordinates: [-122.414, 37.776],\n        //       },\n        //       properties: {\n        //         title: \"Mapbox\",\n        //         description: \"San Francisco, California\",\n        //       },\n        //     },\n        //   ],\n        // };\n        // geojson.features.forEach(function (marker) {\n        //   // create a HTML element for each feature\n\n        //   // make a marker for each feature and add to the map\n        //   new mapboxgl.Marker()\n        //     .setLngLat(marker.geometry.coordinates)\n        //     .setPopup(\n        //       new mapboxgl.Popup({ offset: 25 }) // add popups\n        //         .setHTML(\n        //           \"<h3>\" +\n        //             marker.properties.title +\n        //             \"</h3><p>\" +\n        //             marker.properties.description +\n        //             \"</p>\"\n        //         )\n        //     )\n        //     .addTo(map);\n        // });\n    }\n    renderMap(){\n        \n    }\n\n    zipcodeCallback(new_zipcode){\n        this.setState({\n            zipcode: new_zipcode,\n            isLoading: true\n        })\n        this.fetchData(new_zipcode)\n    }\n    displayShelters(){\n        if(this.state.show_shelters === true){\n            this.setState({show_shelters: false})\n        }else{\n            this.setState({show_shelters: true })\n        }\n    }\n\n    displayFoodbanks(){\n        if (this.state.show_foodbanks === true) {\n            this.setState({show_foodbanks: false })\n        } else {\n            this.setState({show_foodbanks: true })\n        }\n    }\n\n    fetchData(zipcode){\n        let headers = new Headers();\n\n        headers.append('Content-Type', 'application/json');\n        headers.append('Accept', 'application/json');\n        headers.append('Origin', 'http://localhost:3000');\n        const url = 'https://food-bank-finder-api.herokuapp.com/';\n        const self = this;\n\n        fetch(url + zipcode, {\n            mode: 'cors',\n            credentials: 'include',\n            method: 'GET',\n            headers: headers\n        }).then(function(response) {\n            response.json().then(function(res){\n                self.setState({\n                    foodbanks: res.food_banks,\n                    shelters: res.shelters,\n                    isLoading: false,\n                    zipcode: zipcode,\n                })\n            })\n        }).catch(function(err){\n            self.setState({\n                fetchError: err,\n            })\n        })\n    }\n\n    // changeZipCode(event){\n    //     //handles change of input in state\n    //     console.log(event.target.value);\n    //     event.preventDefault();\n    //     this.setState({zipcode: event.target.value})\n    //     // console.log(this.state.zipcode)\n    // }\n\n    // changeArea(){\n    //     this.setState({\n    //         isLoading: false\n    //     })\n    //     this.fetchData(this.state.zipcode)\n    // }\n\n\n    render(){\n      // var settings = {\n      //     \"async\": true,\n      //     \"crossDomain\": true,\n      //     \"url\": \"https://us1.locationiq.com/v1/search.php?key=pk.d0f854ee46b2834b4db26e99827dfe8b&q=Empire%20State%20Building&format=json\",\n      //     \"method\": \"GET\"\n      // }\n\n\n      // $.ajax(settings).done(function (response) {\n      //     console.log(response);\n      // });\n\n      //Map here\n      \n      \n\n      //Map end here\n\n      if (this.state.isLoading) {\n        return <div>Loading...</div>;\n      }\n      console.log(this.state.foodbanks);\n      return (\n        <div>\n          <SearchBar change_zip={this.zipcodeCallback} />\n          <div class=\"body\">\n            <Food_Banks\n              show={this.state.show_foodbanks}\n              zipcode={this.state.zipcode}\n              foodbanks={this.state.foodbanks}\n            />\n            <Shelter\n              show={this.state.show_shelters}\n              zipcode={this.state.zipcode}\n              shelters={this.state.shelters}\n            />\n            <div class=\"checkmarks\">\n              <input\n                onClick={this.displayFoodbanks}\n                type=\"checkbox\"\n                id=\"foodbank\"\n              />\n              <label for=\"foodbank\">Foodbank</label>\n              <input\n                onClick={this.displayShelters}\n                type=\"checkbox\"\n                id=\"shelter\"\n              />\n              <label for=\"shelter\">Shelter</label>\n\n            </div>\n            {/* <div>\n              <div className=\"sidebarStyle\">\n                <div>\n                  Longitude: {this.state.lng} | Latitude: {this.state.lat} |\n                  Zoom: {this.state.zoom}\n                </div>\n              </div>\n              <div ref={this.mapContainer} className=\"mapContainer\" />\n            </div> */}\n          </div>\n        </div>\n      );\n    }\n}","/Users/jbirondo/Desktop/food_insecurity/src/Components/food_banks.js",["36"],"import React from 'react';\nimport SearchBar from './SearchBar'\nimport './food_banks.css'\n\nexport default class Places extends React.Component{\n    render(){\n        const arr = this.props.foodbanks;\n        const arr_list = arr.map(function (obj) {\n            return <li className=\"list-items\">\n                        <img alt=\"\" src={obj[\"Image\"]}></img>\n                        <div className=\"item-info\">\n                            <a href={obj[\"Link\"]}>\n                                <div>{obj[\"Name\"]}</div>\n                            </a>\n                            <div>{obj[\"Address\"]}</div>\n                            <div>{obj[\"Phone\"]}</div>\n                        </div>\n                    </li>\n        })\n        return(\n            <div style={{ visibility: this.props.show ? 'visible' : 'collapse' }}>\n                \n                <div>Food Banks</div>\n                <ul className=\"list-container\">{arr_list}</ul>\n            </div>\n            \n        )\n    }\n}","/Users/jbirondo/Desktop/food_insecurity/src/Components/shelter.js",[],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":106,"column":21,"nodeType":"43","endLine":106,"endColumn":129},{"ruleId":"44","severity":1,"message":"45","line":2,"column":8,"nodeType":"46","messageId":"47","endLine":2,"endColumn":17},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"react/jsx-pascal-case","Imported JSX component Food_Banks must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","no-unused-vars","'SearchBar' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]